ques:You are given a list of songs where the ith song has a duration of time[i] seconds.

Return the number of pairs of songs for which their total duration in seconds is divisible by 60. Formally, we want the number of indices i, j such that i < j with (time[i] + time[j]) % 60 == 0.

Input: time = [30,20,150,100,40]
Output: 3
Explanation: Three pairs have a total duration divisible by 60:
(time[0] = 30, time[2] = 150): total duration 180
(time[1] = 20, time[3] = 100): total duration 120
(time[1] = 20, time[4] = 40): total duration 60
#
#
#
#
Aprroch 1: class Solution:
    def numPairsDivisibleBy60(self, time: List[int]) -> int:
        count=0
        for i in range(len(time)+1):
            for j in range(i+1,len(time)):
                if (time[i]+time[j]) % 60 ==0:
                    count+=1
            i+=1
        return count
Time complexity:O(n^2)

Approch 2:class Solution(object):
    def numPairsDivisibleBy60(self, time):
        mapp = [0] * 60
        result = 0
        for x in time:
            result += mapp[-x % 60]
            mapp[x % 60] += 1
        return result
