ques:You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons.

If you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it.

Return the maximum coins you can collect by bursting the balloons wisely.
#
#
#
Input: nums = [3,1,5,8]
Output: 167
Explanation:
nums = [3,1,5,8] --> [3,5,8] --> [3,8] --> [8] --> []
coins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167
####
class Solution:
    def maxCoins(self, nums: List[int]) -> int:
        @cache
        def search(nums):
            return 0 if len(nums) < 3 else max([search(nums[:i + 1]) + search(nums[i:]) 
			        + nums[0] * nums[i] * nums[-1] for i in range(1, len(nums) - 1)])
        return search(tuple([1] + nums + [1]))
            
                
